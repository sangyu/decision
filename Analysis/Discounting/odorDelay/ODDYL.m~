



set(gcf,'PaperPositionMode','auto');

set(0,'DefaultAxesFontName', 'Arial')
set(0,'DefaultAxesFontSize', 12)

% Change default text fonts.473
set(0,'DefaultTextFontname', 'Arial')
set(0,'DefaultTextFontSize', 12)
markers={'o';'^';'d';'s';'p';'h';'*' };

close all
%colors
red=[ 0.85    0.20   0.20];
blue=[ 0.3    0.65    0.8];
orange= [0.9, 0.3,  0];
gray=[.4, .4, .4];
green=[  0.2,  0.85,0.75];
yellow=[1, 0.95, 0.4];
pink= [0.9, 0.3,  0.6];


% clean up directory and find all files in range

% %%
F=0;
delete '.DS_Store';
D = dir;

info=zeros(length(D), 3);
for i=3:length(D)
    info(i, 1)=str2num(D(i).name(4:6));
    info(i, 2)=datenum(D(i).name(8:15), 'dd-mm-yy');
end

info(1:2, :)=[];
info(:, 2)=info(:, 2)-min(info(:, 2))+1;
info(:, 3)=[1:length(info(:, 1))];

[info(:, 2), I]=sort(info(:, 2));
info(:, 2)=round(info(:, 2));
info(:, 1)=info(I, 1);
info(:, 3)=info(I, 3);


mouse=input('which mouse ');    
day=input('which day ');
% bigSize=input('what big size ');0

if mean(day)==0 && mean(mouse)~=0
indrange=info(ismember(info(:, 1), mouse), 3);
elseif mean(mouse)==0 && mean(day)~=0
indrange=info(ismember(info(:, 2),day), 3);
elseif mean(mouse)==0 && mean(day)==0
    indrange=info(:, 3);
else
indrange=info(ismember(info(:, 1), mouse), 3);
indrange2=info(ismember(info(:, 2),day), 3);
indrange=intersect(indrange, indrange2);
end
data=[];
infoMouse=[];
for m=1: length(indrange)

filename= D(indrange(m)+2).name
    

[e, a]=extractOlfData(filename);
info(info(:, 3)==indrange(m), 4)=e.bigSize;
info(info(:, 3)==indrange(m), 5)=max([3*max(e.leftDecisionTTL),1*max(e.cueSampledTTL),2*max(e.cueOnTTL)]);
info(info(:, 3)==indrange(m), 6)= a.rewardCollected;
info(info(:, 3)==indrange(m), 7)=length(find(a.score));
info(info(:, 3)==indrange(m), 8)=length(a.validTrials);
odor=[];
delayD=[];

leftDelay=e.leftRewardDelay(a.validTrials);
rightDelay=e.rightRewardDelay(a.validTrials);
s=size(leftDelay);
if s(1)==1
    leftDelay=leftDelay';
    rightDelay=rightDelay';
end
side=a.side(:, 1);
actualDelay=sum(a.side.*[leftDelay, rightDelay], 2);
leftRewardSize=e.leftRewardSizeTotal(a.validTrials)./e.leftValveDuration(a.validTrials);
rightRewardSize=e.rightRewardSizeTotal(a.validTrials)./e.rightValveDuration(a.validTrials);
infoMouse=[infoMouse; info(info(:, 3)==indrange(m),:)];

valveDuration=e.leftValveDuration(1);
leftActualDelay=leftDelay.*side;
rightActualDelay=rightDelay.*(1-side);
actualDelaySigned=leftActualDelay-rightActualDelay;
actualDelay=leftActualDelay+rightActualDelay;
previousSide=[0; side(1:end-1)];
previousTrialDelay=[0; actualDelaySigned(1:end-1)];

previousTrialDelayCase=(leftActualDelay>mean(actualDelay))*3-(rightActualDelay>mean(actualDelay))*3;
case2L=intersect(find(leftActualDelay>0), find(leftActualDelay<=mean(actualDelay)));
case2R=intersect(find(rightActualDelay>0), find(rightActualDelay<=mean(actualDelay)));
previousTrialDelayCase(case2L)=2;
previousTrialDelayCase(case2R)=-2;
case1=find(previousTrialDelayCase==0);
case1L=intersect(find(side==1), case1);
case1R=intersect(find(side==0), case1);
previousTrialDelayCase(case1L)=1;
previousTrialDelayCase(case1R)=-1;

previousTrialDelayCase=[1; previousTrialDelayCase(1:end-1)];
index=intersect(find(e.cueSampledTTL==1), find(e.cueOnTTL==1));
e.cueSampledTTL(index)=0;


dateRun=datenum(e.dateTime(1:11), 'dd-mmm-yyyy');

data=[data;leftDelay, rightDelay, side,leftRewardSize, rightRewardSize,  a.validTrials, m*ones(length(a.validTrials), 1), leftDelay-rightDelay, leftDelay./(leftDelay+rightDelay), leftRewardSize-rightRewardSize, e.cueSampledTTL(a.validTrials), e.cueOnTTL(a.validTrials), a.travelTime(a.validTrials-min(a.validTrials)+1), a.reactionTime(a.validTrials-min(a.validTrials)+1), previousTrialDelay, previousTrialDelayCase, previousSide, dateRun*ones(length(a.validTrials), 1)];
% 

% [leftSide, rightSide, delayDiffSide, delayRatioSide]=odorDelayPlot(leftDelay, rightDelay, side);
% title(filename)

% plot(delayDiffSet, delayD(:, 1)./delayD(:, 2),'o',delayDiffSet,yfit./delayD(:, 2),'-','LineWidth',2)
assignin('base', ['info' e.mouseID(end-2:end)], infoMouse);
assignin('base', ['data' e.mouseID(end-2:end)], data);



% save(['C:\Users\user\Desktop\OD\MatFiles\' e.mouseID(end-2:end) '.mat'],['info' e.mouseID(end-2:end)] , ['data' e.mouseID(end-2:end)])
fprintf(['rewardcollected = ', num2str(a.rewardCollected),  '   percent less delayed choice = ', num2str(a.discountPref), '\n'])
end

stimSetting={ 'cue on';'no stim'; 'cue sampled';};

if mean(info(:,5))>0
    columnIg=1;
    stimTime=2;
else
    stimTime=0;
    columnIg=0; 
end



    


% %% d
% % % close all53

% mouse=[562]
% mouse=[ 530, 531]
% mouse=[562]
% % %  mouse=[ 473, 497]530
% mouse = [ 471, 473, 473,497 ] 

% mouse = [562, 567,568]
% % mouse=[ 530, 531]
% mouse = [ 533, 544, 547, 521]
% mouse = [ 540, 539, 530, 531]

%  mouse=[533, 547, 543, 502] 

  mice =mouse;


data=[];
f=pwd;
runSessionsStart=1;

for j=1:length(mice)    
    info1=eval(['info',num2str(mice(j))]);
    
    data1=eval(['data', num2str(mice(j))]);
    days=[max(info1(:, 2))-200:max(info1(:, 2))]';
    c=intersect(info1(:, 2), days);
    ia=[];
    for i=1:length(c)
    ia=[ia; find(info1(:, 2)==c(i))];
    end
%     sessions=intersect(intersect(find(info1(:, 4)==bigSize), find(info1(:, 5)==stimTime)), ia);
    sessions=[1:length(info1(:, 1))];
    %     sessions=intersect(find(info1(:, 5)==stimTime), ia);
 for i=runSessionsStart:length(sessions)
data=[data; data1(find(data1(:,7)==sessions(i)), :)];  
    end
end
bigSize=info1(1, 4);

% 
% [bg,DEV,STATS, intercept, result]=plotLogitThings(data,3, 8, columnAna5, columnIg, 1);
% bg;
% pvalue=STATS.p;
% intercept;
% 5


if columnIg~=0

diffStim=data(:, 11)-data(:, 12);
% diff=-1 cue on stim, diff = +1 cue sampled stim, 0 no stim
total=data(:, 11)+data(:, 12);
else
    diffStim=data(:, 11);
    total=data(:, 11);
end



% %
data=[data(:, 1:17), diffStim, total, data(:, 18)];
if length(data(:, 1))>500
    confInt=1;
else
    confInt=0;
end
dayBreaks=[0; find(diff(data(:, 20))~=0);length(data(:, 20))];

for i=1:length(dayBreaks)-1
    midDay=dayBreaks(i)+round(dayBreaks(i+1)-dayBreaks(i)-1)/2;
    data(dayBreaks(i)+1:midDay, 21)=0;
    data(midDay+1:dayBreaks(i+1), 21)=-1;
end

% %%
confInt=1;
dataRaw=data;
% data=dataRaw((dataRaw(:, 2)==8), :);
data=data((data(:, 2)~=4), :);
data=data((data(:, 12)==0), :);
% data=data((data(:, 21)==-1), :);
% data=data((data(:, 18)==1), :);

anaPara=18;
f1=figure(1)

set(f1, 'Position', [100, 100, 1200 , 700])

subplot(221)
hold on
axis square
[bg,DEV,STATS, intercept, result]=plotLogitThings(data,3, 8, anaPara, 1, 0, confInt, 'april');

xlabel('(531big delay-small delay)/s');
ylabel('Preference for big side');

try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*1000)/1000), '(',num2str(round(STATS.p(2, i)*1000)/1000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*1000)/1000), '(',num2str(round(STATS.p(1, i)*1000)/1000) ')'])
end
end
xlim([min(data(:, 8))-2, max(data(:, 8))+2])
ylim([0 1.1])
l1=line([0, 0], [0, 1]);
set(l1, 'Color', [.8, .8, .8])
l2=line([-10, 10], [0.5, 0.5]);
set(l2, 'Color', [.8, .8, .8])
% %5

%
% figure
subplot(223)
axis square
hold on
interceptMatrix=[];
resultMatrix=[];
sampleSizeMatrix=[];
stim=[];
delayGratifyMatrix=zeros(1, 3);
for i=-1:1

    try
  
    dataA=data(find(data(:, anaPara)==i), :);
    switch i
        case -1
            colorMapChoice='redGrad';
        case 0
            colorMapChoice='grayGrad';
        case 1
            colorMapChoice='greenGrad';
    end
    hold on
    allunfavourable=find(dataA(:, 8)>0);
    delayGratify=length(find(dataA(allunfavourable, 3)>0))/length(allunfavourable);
    delayGratifyMatrix(i+2)=delayGratify;
[bg,DEV,STATS, intercept, result]=plotLogitThings(dataA,3, 1, 2, 1, 1, confInt, colorMapChoice);
interceptMatrix=[interceptMatrix; intercept]
sampleSizeMatrix=[sampleSizeMatrix; length(dataA(:, 1))];
resultMatrix=[resultMatrix; result]
            stim=[stim, i];

    end
end

xlabel('big delay/s');
ylabel('Preference for big side');

try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*1000)/1000), '(',num2str(round(STATS.p(2, i)*1000)/1000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*1000)/1000), '(',num2str(round(STATS.p(1, i)*1000)/1000) ')'])
end
end
xlim([min(data(:, 1)), max(data(:, 1))])


% %%
subplot(222)

rightFixedDelay=sort(unique(data(:, 2)));
leftFixedDelay=sort(unique(data(:, 1)));
% %
%   figure (5)
axis square
hold on
indifferent=[];
discCoef=[];
try
for i=1:length(interceptMatrix(:, 1))

leftIndifferent=interceptMatrix(i, :)';
switch stim(i)
        case -1
            colorChoice=red;
        case 0
            colorChoice=gray;
        case 1            
            colorChoice=green;
    end
p=plot(rightFixedDelay, leftIndifferent, markers{i}, 'Color', colorChoice);
% if abs(i)==1
set(p, 'MarkerFaceColor', colorChoice)
% end
[bf, bintf, rf, rintf, statsf]= regress(leftIndifferent, [ones(length(rightFixedDelay),1), rightFixedDelay]);
xf=min(rightFixedDelay):1:max(rightFixedDelay);
lf=plot(xf, bf(1)+bf(2).*xf);
set(lf, 'Color', colorChoice)
% t=text(1.5, i, [stimSetting{i}, '( n=',num2str(sampleSizeMatrix(i)) , ')   k=', num2str(round(100*(bf(2)-1)/bf(1))/100), '   AL/AS =', num2str(round(100*bf(2))/100)]);
t=text(1.5, i, [stimSetting{i}, '( n=',num2str(sampleSizeMatrix(i)) , ')   k=', num2str(round(100/bf(1))/100), '   AL/AS =', num2str(round(100*bf(2))/100)]);
set(t, 'Color', colorChoice);
[r,p] = corrcoef(rightFixedDelay, leftIndifferent);
t2=text(4.1, leftIndifferent(end), [ '   r=', num2str(round(1000*r(1, 2))/1000), '   p=', num2str(round(1000*p(1, 2))/1000)]);
set(t2, 'Color', colorChoice);
indifferent=[indifferent, leftIndifferent];
% discCoef=[discCoef, [bf(2); (bf(2)-1)/bf(1)]];
discCoef=[discCoef, [bf(2); 1/bf(1)]];
end
end
l1=line([min(rightFixedDelay) max(rightFixedDelay)], [0, 0]);
set(l1, 'Color', [.8, .8, .8])
l2=line( [0, 0], [min(rightFixedDelay) max(rightFixedDelay)]);
set(l2, 'Color', [.8, .8, .8])
xlabel('Fixed small delay')
ylabel('Indifferent big delay')
xlim([min(rightFixedDelay), max(rightFixedDelay)]);

% ylim([min(leftIndifferent), min([max(leftIndifferent), max(leftFixedDelay)*2])]);
suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);

% %
subplot(224)

rightFixedDelay=sort(unique(data(:, 2)));
leftFixedDelay=sort(unique(data(:, 1)));
% %
axis square
hold on
indifferent2=[];
discCoef2=[];
try
for i=1:length(interceptMatrix(1, :))

leftIndifferent=interceptMatrix(i, :)';
switch stim(i)
        case 0
            colorChoice=gray;
        case 1
            colorChoice=green;
        case -1
            
            colorChoice=red;
    end

p=plot(rightFixedDelay, leftIndifferent, markers{i}, 'Color', colorChoice);
% if abs(i)==1
set(p, 'MarkerFaceColor', colorChoice)
% end
[bf2, bintf2, rf2, rintf2, statsf2]= regress(leftIndifferent(2:end), [ones(length(rightFixedDelay(2:end)),1), rightFixedDelay(2:end)]);
xf2=min(rightFixedDelay):1:max(rightFixedDelay);
lf2=plot(xf2, bf2(1)+bf2(2).*xf2);
set(lf2, 'Color', colorChoice)
% t=text(1.5, i, [stimSetting{i}, '( n=',num2str(sampleSizeMatrix(i)) , ')   k=', num2str(round(100*(bf2(2)-1)/bf2(1))/100), '   AL/AS =', num2str(round(100*bf2(2))/100)]);
t=text(1.5, i, [stimSetting{i}, '( n=',num2str(sampleSizeMatrix(i)) , ')   k=', num2str(round(100/bf2(1))/100), '   AL/AS =', num2str(round(100*bf2(2))/100)]);
set(t, 'Color', colorChoice);
[r2,p2] = corrcoef(rightFixedDelay(2:end), leftIndifferent(2:end));
t2=text(4.1, leftIndifferent(end), [ '   r=', num2str(round(1000*r2(1, 2))/1000), '   p=', num2str(round(1000*p2(1, 2))/1000)]);
set(t2, 'Color', colorChoice);
indifferent2=[indifferent2, leftIndifferent];
% discCoef2=[discCoef2, [bf2(2); (bf2(2)-1)/bf2(1); bf2(1)]];
discCoef2=[discCoef2, [bf2(2); 1/bf2(1); bf2(1)]];
end
end
l1=line([min(rightFixedDelay) max(rightFixedDelay)], [0, 0]);
set(l1, 'Color', [.8, .8, .8])
l2=line( [0, 0], [min(rightFixedDelay) max(rightFixedDelay)]);
set(l2, 'Color', [.8, .8, .8])
% text(0.5, 5, num2str(round(100*(indifferent2(1, :)-discCoef2(end,:)))/100))
xlabel('Fixed small delay')
ylabel('Indifferent big delay')
xlim([min(rightFixedDelay), max(rightFixedDelay)]);
% fprintf(['\nestimation offset: light off/on    ' num2str(indifferent2(1, :)-discCoef2(end,:)), '\n\n'])

% ylim([min(leftIndifferent), min([max(leftIndifferent), max(leftFixedDelay)*2])]);
suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);

assignin('base', ['linear' e.mouseID(end-2:end)], [rightFixedDelay, indifferent]);
assignin('base', ['discCoef' e.mouseID(end-2:end)], discCoef);




totalWater=sum(data(:, 3).*data(:, 4)+(1-data(:, 3)))*valveDuration/10

% %

f3=figure(3)
set(f3, 'Position', [100, 100, 800 , 300])

subplot(223)
axis square
hold on
interceptMatrix=[];
resultMatrix=[];
sampleSizeMatrix=[];
stim=[];
delayGratifyMatrix=zeros(1, 3);
for i=-1:1

    try
  
    dataA=data(find(data(:, anaPara)==i), :);
    switch i
        case -1
            subplot(122)
            colorMapChoice='redGrad';
        case 0
            subplot(121)
            colorMapChoice='grayGrad';
        case 1
            subplot(122)
            colorMapChoice='greenGrad';
    end
    hold on
    allunfavourable=find(dataA(:, 8)>0);
    delayGratify=length(find(dataA(allunfavourable, 3)>0))/length(allunfavourable);
    delayGratifyMatrix(i+2)=delayGratify;
[bg,DEV,STATS, intercept, result]=plotLogitThings(dataA,3, 1, 2, 5, 1, 1, colorMapChoice);
% [gof, intercept]=plotHyperThings(dataA, 3, 1)
axis square
interceptMatrix=[interceptMatrix; intercept]
sampleSizeMatrix=[sampleSizeMatrix; length(dataA(:, 1))];
resultMatrix=[resultMatrix; result]
            stim=[stim, i];

    end
end

xlabel('big delay/s');
ylabel('Preference for big side');

try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*1000)/1000), '(',num2str(round(STATS.p(2, i)*1000)/1000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*1000)/1000), '(',num2str(round(STATS.p(1, i)*1000)/1000) ')'])
end
end
xlim([min(data(:, 1)), max(data(:, 1))])




indLargeSoonerLight=intersect(find(data(:, 8)<0), find(data(:, 18)==1));
indLargeSoonerNoLight=intersect(find(data(:, 8)<0), find(data(:, 18)==0));

indLargeLaterLight=intersect(find(data(:, 8)>0), find(data(:, 18)==1));
indLargeLaterNoLight=intersect(find(data(:, 8)>0), find(data(:, 18)==0));

indLargeEqualLight=intersect(find(data(:, 8)==0), find(data(:, 18)==1));
indLargeEqualNoLight=intersect(find(data(:, 8)==0), find(data(:, 18)==0));

proportionMatrix=[mean(data(indLargeSoonerLight, 3)), mean(data(indLargeSoonerNoLight, 3));
mean(data(indLargeEqualLight, 3)), mean(data(indLargeEqualNoLight, 3));
mean(data(indLargeLaterLight, 3)), mean(data(indLargeLaterNoLight, 3))];

assignin('base', ['proportionMatrix' num2str(mouse)], proportionMatrix);
figure (5)
bar(proportionMatrix)

%%
satietyKMat=[0.5, 0.56; 0.47, 0.43];
satietyGMat=[1.67, 2.15; 1.55, 1.49];
figure(3)
subplot(121)
hold on
axis square

plot ( [2, 3], satietyKMat(1, :), '.-', 'LineWidth', 2, 'MarkerSize', 15, 'Color', gray)
plot ([2, 3],  satietyKMat(2, :), '.-', 'LineWidth', 2, 'MarkerSize', 15, 'Color', green)
xlim([1 4])
ylim([0, max(satietyKMat(1, :))+.1])
subplot(122)
axis square
hold on
plot ( [2, 3], satietyGMat(1, :), '.-', 'LineWidth', 2, 'MarkerSize', 15, 'Color', gray)
plot ([2, 3],  satietyGMat(2, :), '.-', 'LineWidth', 2, 'MarkerSize', 15, 'Color', green)
xlim([1 4])
ylim([0, max(satietyGMat(1, :))+.5])


%%

linear=[linear471(:, 2),linear473(:, 2), linear475(:, 2) , linear497(:, 2)];
linearL=[linear471(:, 3),linear473(:, 3), linear475(:, 3) , linear497(:, 3)];
    
disc=[discCoef471(:, 1),discCoef473(:, 1), discCoef475(:, 1), discCoef497(:, 1)];
discL=[discCoef471(:, 2),discCoef473(:, 2), discCoef475(:, 2 ), discCoef497(:, 2)];
% % 
% linear=[linear471(:, 2), linear475(:, 2) ]
% linearL=[linear471(:, 3), linear475(:, 3) ]

f2=figure (2)
 set(gca, 'FontName', 'Cambria')

set(f2, 'Position', [500, 50, 1000, 600])

subplot(231)
axis square
title('indifference delay(s)')
hold on

plot(linear475(:, 1), linear, '.-','Color', [.8 .8 .8])
plot(linear475(:, 1), linearL, '.-', 'Color', [.4 .9 .8])
errorbar(linear475(:, 1), mean(linearL, 2), std(linearL, 0, 2)/sqrt(4),'o-','Color', green, 'LineWidth', 2)
errorbar(linear475(:, 1), mean(linear, 2), std(linear, 0, 2)/sqrt(4),'o-','Color', [.5 .5 .5], 'LineWidth', 2)
xlim([-.50 4.5])

[H1,P1,CI1,STATS1] =ttest(linear(4, :), linearL(4, :));
if H1==1
    t1=text(linear475(4, 1), min(linearL(4,:))-2, ['*  ', num2str(round(P1*1000)/1000)])
    set(t1, 'FontSize', 13, 'Color', [.3 .3 .3])
    else
    t1=text(linear475(4, 1), min(linearL(4,:))-2, ['n. s. (' num2str( num2str(round(P1*1000)/1000)) ')'])
    set(t1, 'FontSize', 13, 'Color', [.3 .3 .3])


end

subplot(232)
axis square

title('normalized indifference point delay(s)')
LL=[linearL(1, :)-linearL(1, :); linearL(2, :)-linearL(1, :);linearL(3, :)-linearL(1, :);linearL(4, :)-linearL(1, :),];
L=[linear(1, :)-linear(1, :); linear(2, :)-linear(1, :);linear(3, :)-linear(1, :);linear(4, :)-linear(1, :)];
hold on
plot(linear475(:, 1), L, '.-','Color', [.8 .8 .8])
plot(linear475(:, 1), LL, '.-', 'Color', [.4 .9 .8])
errorbar(linear475(:, 1), mean(LL, 2), std(LL, 0, 2)/sqrt(4),'o-','Color', green, 'LineWidth', 2)
errorbar(linear475(:, 1), mean(L, 2), std(L, 0, 2)/sqrt(4),'o-','Color', [.5 .5 .5], 'LineWidth', 2)
xlim([-.50 4.5])

[H2,P2,CI2,STATS2] =ttest(L(4, :), LL(4, :));
if H2==1
    t2=text(linear475(4, 1), min(LL(4,:))-2, ['*  ', num2str(round(P2*1000)/1000)])
    set(t2, 'FontSize', 13, 'Color', [.3 .3 .3])
    else
    t2=text(linear475(4, 1), min(LL(4,:))-2, ['n. s. (' num2str( num2str(round(P2*1000)/1000)) ')'])
    set(t2, 'FontSize', 13, 'Color', [.3 .3 .3])


end



subplot(233)
axis square

hold on
title('percent decrease in indifference point delay')
index=100*(linearL./linear-1);
plot(linear475(:, 1), index, '.-', 'Color', [.95, .7, .7])
errorbar(linear475(:, 1), mean(index, 2), std(index, 0, 2)/sqrt(4),'o-', 'Color', red, 'LineWidth', 2)
line([0 4], [0 0], 'Color', [0.5, 0.5, 0.5])
xlim([-.50 4.5])
z=[0, 0, 0, 0];
[H3,P3,CI3,STATS3] =ttest(index(4, :), z);
if H3==1
    t3=text(linear475(4, 1), min(index(4,:))-4, ['*  ', num2str(round(P3*1000)/1000)])
    set(t3, 'FontSize', 13, 'Color', [.3 .3 .3])
    else
    t3=text(linear475(4, 1), min(index(4,:))-4, ['n. s. (' num2str( num2str(round(P3*1000)/1000)) ')'])
    set(t3, 'FontSize', 13, 'Color', [.3 .3 .3])
end





subplot(234)
axis square

title('gradient')
hold on
bar(1,  mean(disc(1, :)), 0.3,  'FaceColor',[.6 .6 .6],'EdgeColor',[.6 .6 .6])
bar(2,  mean(discL(1, :)), 0.3,  'FaceColor',green,'EdgeColor',green)
errorbar(1, mean(disc(1, :)),  std(disc(1, :))/sqrt(4),'.','Color', red, 'LineWidth', 2)
errorbar(2 , mean(discL(1, :)),  std(discL(1, :))/sqrt(4),'.','Color', red,'LineWidth', 2)
xlim([0 3])
ylim([1 max(max(disc(1, :)))+max(max(std(disc(1, :))/sqrt(4)))])

plot([1, 1, 1, 1], disc(1, :), 'o', 'Color', red)
plot([2, 2, 2, 2], discL(1, :), 'o', 'Color', red)
for i=1:length(disc(1, :))
plot([1, 2], [disc(1, i), discL(1, i)], 'Color', red)
end

[H4,P4,CI4,STATS4] =ttest(disc(1, :), discL(1, :))

if H4==1
    t4=text(1.5, max([disc(1, :), discL(1, :)]), ['*  ', num2str(round(P4*1000)/1000)])
    set(t4, 'FontSize', 13, 'Color', [.3 .3 .3])
    else
    t4=text(1.5, max([disc(1, :), discL(1, :)]), ['n. s. (' num2str( num2str(round(P4*1000)/1000)) ')'])
    set(t4, 'FontSize', 13, 'Color', [.3 .3 .3])

end




subplot(235)
axis square

title('discount factor')
hold on
bar(1,  mean(disc(2, :)), 0.3, 'FaceColor',[.6 .6 .6],'EdgeColor',[.6 .6 .6])
bar(2,  mean(discL(2, :)), 0.3, 'FaceColor',green,'EdgeColor',green)
errorbar(1, mean(disc(2, :)),  std(disc(2, :))/sqrt(4),'.','Color', red, 'LineWidth', 2)
errorbar(2 , mean(discL(2, :)),  std(discL(2, :))/sqrt(4),'.','Color', red, 'LineWidth', 2)
xlim([0 3])
ylim([0 max(max(disc(2, :)))+max(max(std(disc(2, :))/sqrt(4)))])

plot([1, 1, 1, 1], disc(2, :), 'o', 'Color', red)
plot([2, 2, 2, 2], discL(2, :), 'o', 'Color', red)
for i=1:length(disc(2, :))
plot([1, 2], [disc(2, i), discL(2, i)], 'Color',red)
end

[H5,P5,CI5,STATS5] =ttest(disc(2, :), discL(2, :))

if H5==1
    t5=text(1.5, max([disc(2, :), discL(2, :)]), ['*  ', num2str(round(P5*1000)/1000)]);
    set(t5, 'FontSize', 13, 'Color', [.3 .3 .3])
    else
    t5=text(1.5, max([disc(2, :), discL(2, :)]), ['n. s. (' num2str( num2str(round(P5*1000)/1000)) ')'])
    set(t5, 'FontSize', 13, 'Color', [.3 .3 .3])

end


subplot(236)
axis square
discInd=(discL-disc)./disc;

hold on
bar([1, 2], mean(discInd, 2), 'FaceColor',green,'EdgeColor',green)

errorbar([1, 2], mean(discInd, 2),  std(discInd, 0, 2)/sqrt(4),'.','Color', red, 'LineWidth', 2)
xlim([0 3])

plot([1, 1, 1, 1], discInd(1, :), 'o', 'Color', red)
plot([2, 2, 2, 2], discInd(2, :), 'o', 'Color', red)
% for i=1:length(disc(2, :))
% plot([1, 2], [discInd(1, i), discInd(2, i)], 'r')
% end

[H6,P6,CI6,STATS6] =ttest(discInd(1, :),  z)
[H7,P7,CI7,STATS7] =ttest(discInd(2, :),  z)

if H6==1
    t6=text(1, -.23, ['*  ', num2str(round(P6*1000)/1000)])
    set(t6, 'FontSize', 13, 'Color', [.3 .3 .3])
else
    t6=text(1,-.23, ['n. s. (' num2str( num2str(round(P6*1000)/1000)) ')'])
    set(t6, 'FontSize', 13, 'Color', [.3 .3 .3])
end

if H7==1
    t7=text(2, -.23, ['*  ', num2str(round(P7*1000)/1000)])
    set(t7, 'FontSize', 13, 'Color', [.3 .3 .3])
else
    t7=text(2, -.23, ['n. s. (' num2str( num2str(round(P7*1000)/1000)) ')'])
    set(t7, 'FontSize', 13, 'Color', [.3 .3 .3])
end

%%

figure (3)

scatter(discInd(1, :), discInd(2, :))
xlim([-1, 1])
ylim([-1, 1])
l1=line([-1, 1], [0, 0]);
set(l1, 'Color', [.8, .8, .8])
l2=line([0, 0], [-1, 1]);
set(l2, 'Color', [.8, .8, .8])


%%

f1=figure(1);

subplot(221)
axis square
% [coefficients, deviances, regressionStats] = glmfit(data(:, [8, 10, 11]), data(:, 3), 'binomial', 'link', 'logit');
% [ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 10, 11], 8, [10, 11]);
% 
% [regressionStats.beta, regressionStats.p]

[bg,DEV,STATS, intercept, result]=plotLogitThings(data,3, 1, 2, 1,1, 1, 1, 'april');


subplot(222)
hold on
axis square
if columnIg~=0
data2=data(data(:, columnIg)==0,:);
else
    data2=data;
end
[coefficients, deviances, regressionStats] = glmfit(data2(:, [8, columnAna]), data2(:, 3), 'binomial', 'link', 'logit');
[ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data2, [8, columnAna], 8, columnAna);
l1=line([0, 0], [0, 1]);
set(l1, 'Color', [.8, .8, .8])
l2=line([-10, 10], [0.5, 0.5]);
set(l2, 'Color', [.8, .8, .8])
text(3, .85, ['p = ' num2str(round(regressionStats.p(3)*1000)/1000)])
text(3, .9, ['B = ' num2str(round(regressionStats.beta(3)*1000)/1000)])

[regressionStats.beta, regressionStats.p];

xlabel('(big delay-small delay)/s');
ylim([0 1])


figure(1)


subplot(223)
axis square
dataA=data2(data2(:, 8)>=0, :);

[bg,DEV,STATS, intercept, result]=plotLogitThings(dataA,3, 8, columnAna, columnIg, 1);
xlabel('(big delay-small delay)/s');
ylabel('Preference for left side');
bg;
pvalue=STATS.p;
intercept;
try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*10000)/10000), '(',num2str(round(STATS.p(2, i)*10000)/10000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*10000)/10000), '(',num2str(round(STATS.p(1, i)*10000)/10000) ')'])
end
end

subplot(224)
axis square
[coefficients, deviances, regressionStats] = glmfit(dataA(:, [8, columnAna]), dataA(:, 3), 'binomial', 'link', 'logit');
[ax, ~, patchHandles]=plotLogisticRegression(coefficients, regressionStats, dataA, [8, columnAna], 8, columnAna);
[coefficients, deviances, regressionStats] = glmfit(dataA(:, [8, columnAna]), dataA(:, 3), 'binomial', 'link', 'logit');
[ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, dataA, [8, columnAna], 8, columnAna);
l=line([-0, 10], [0.5, 0.5]);
set(l, 'Color', [.8, .8, .8])
text(3, .85, ['p = ' num2str(round(regressionStats.p(3)*10000)/10000)])
text(3, .9, ['B = ' num2str(round(regressionStats.beta(3)*10000)/10000)])



suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);


%
f=figure(2);
set(f, 'Position', [0, 0, 750, 800])
[leftSide, rightSide, delayDiffSide, xyzP, rightDelayShift, leftDelayShift]=odorDelayPlot(data, 5, 0);


%%



if columnAna~=5
figure(3)
subplot(221)
axis square
% [coefficients, deviances, regressionStats] = glmfit(data(:, [8, 10, 11]), data(:, 3), 'binomial', 'link', 'logit');
% [ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 10, 11], 8, [10, 11]);
% 
% [regressionStats.beta, regressionStats.p]

[bg,DEV,STATS, intercept, result]=plotLogitThings(data,3, 8, 18, 0, 1);
xlabel('(big delay-small delay)/s');
ylabel('Preference for left side');
bg
pvalue=STATS.p
intercept
try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*1000)/1000), '(',num2str(round(STATS.p(2, i)*1000)/1000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*1000)/1000), '(',num2str(round(STATS.p(1, i)*1000)/1000) ')'])
end
end
xlim([-10 10])


subplot(222)

hold on
axis square

[coefficients, deviances, regressionStats] = glmfit(data(:, [8, 18]), data(:, 3), 'binomial', 'link', 'logit');
[ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 18], 8, 18);
l=line([-10, 10], [0.5, 0.5]);
set(l, 'Color', [.8, .8, .8])
text(3, .85, ['p = ' num2str(round(regressionStats.p(3)*1000)/1000)])
text(3, .9, ['B = ' num2str(round(regressionStats.beta(3)*1000)/1000)])

[regressionStats.beta, regressionStats.p]

xlabel('(Left Delay-Right Delay)/s');
ylim([0 1])





subplot(223)
axis square
% [coefficients, deviances, regressionStats] = glmfit(data(:, [8, 10, 11]), data(:, 3), 'binomial', 'link', 'logit');
% [ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 10, 11], 8, [10, 11]);
% 
% [regressionStats.beta, regressionStats.p]

[bg,DEV,STATS, intercept, result]=plotLogitThings(data,3, 8, 19, 0, 1);
xlabel('(Left Delay-Right Delay)/s');
ylabel('Preference for left side');
bg
pvalue=STATS.p
intercept
try
for i=1:length(bg(1, :))
text(3, 1-i*0.1, [num2str(round(bg(2,i)*1000)/1000), '(',num2str(round(STATS.p(2, i)*1000)/1000) ')'])
text(3, 1-i*0.05, [num2str(round(bg(1,i)*1000)/1000), '(',num2str(round(STATS.p(1, i)*1000)/1000) ')'])
end
end
xlim([-10 10])


subplot(224)

hold on
axis square

[coefficients, deviances, regressionStats] = glmfit(data(:, [8, 19]), data(:, 3), 'binomial', 'link', 'logit');
[ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 19], 8, 19);
l=line([-10, 10], [0.5, 0.5]);
set(l, 'Color', [.8, .8, .8])
text(3, .85, ['p = ' num2str(round(regressionStats.p(3)*1000)/1000)])
text(3, .9, ['B = ' num2str(round(regressionStats.beta(3)*1000)/1000)])

[regressionStats.beta, regressionStats.p];

xlabel('(Left Delay-Right Delay)/s');
ylim([0 1])


end

%%


figure(4);
subplot(221)
plotLinThings(data, 13,  8, 18, 1)
xlabel('(Left Delay-Right Delay)/s');
ylabel('travel time/s')


ylim([0 2])
tvl0=data(diffStim==0, 13);
tvl1=data(find(diffStim==1), 13);
tvl2=data(find(diffStim==-1), 13);
tvl0(tvl0>16)=[];
tvl1(tvl1>16)=[];
tvl2(tvl2>16)=[];
tvl0(tvl0<=0)=[];
tvl1(tvl1<=0)=[];
tvl2(tvl2<=0)=[];

% %%
% figure
% hold on
% plot([0 1 2],[mean(tvl0), mean(tvl1), mean(tvl2)],  '*-')
% hold on
% plot([0 1 2 ],[var(tvl0)+mean(tvl0),var(tvl1)+mean(tvl1), var(tvl2)+mean(tvl2)],  'r*-')
% % ylim([0 1])
% % xlim([-1 3])
% axis square 
% %%
subplot(222)
axis square 
hold on
% no shoot
plotHist(tvl0, .05, 'r', 'r', 1);
%sample
plotHist(tvl1, .05, 'c', 'c', 1);
% cueon
plotHist(tvl2, .05, 'g', 'g', 1);

xlabel('travel time/s')

xlim([0 2])
suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);


%%


f1=figure(3);
subplot(223)
plotLinThings(data, 14,  8, 18, 1)
xlabel('(Left Delay-Right Delay)/s');
ylabel('sampling time/s')

ylim([0 3])

rxn0=data(diffStim==0, 14);
rxn1=data(find(diffStim==1), 14);
rxn2=data(find(diffStim==-1), 14);
rxn0(rxn0>16)=[];
rxn1(rxn1>16)=[];
rxn2(rxn2>16)=[];
rxn0(rxn0<=0.3)=[];
rxn1(rxn1<=0.3)=[];
rxn2(rxn2<=0.3)=[];
% 
% plot([0 1 2 3],[mean(rxn0), mean(rxn1), mean(rxn2), mean(rxn3)],  '*-')
% hold on
% plot([0 1 2 3],[var(rxn0)+mean(rxn0),var(rxn1)+mean(rxn1), var(rxn2)+mean(rxn2), var3(rxn3)+mean(rxn3)],  '*-')
% ylim([0 1])
% xlim([-1 3])
axis square 
subplot(224)
axis square 
hold on

plotHist(rxn0, .05, 'r', 'r', 1);
xlabel('sampling time/s')
% sample
plotHist(rxn1, .05, 'c', 'c', 1);
% cueon
plotHist(rxn2, .05, 'g', 'g', 1);
xlim([0 2])
suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);
set(findall(f1,'type','text'), 'fontWeight','bold')
suptitle(['mouse #' num2str(mice) ', number of trials=' num2str(length(data(:, 1))), ', big reward=' num2str(bigSize), ' x small reward']);

print('-depsc','-r200',['C:\Users\user\Desktop\OD\Graphs\#' num2str(mice) '_samptime_bigsize', num2str(num2str(bigSize)), '_laser_', num2str(stimTime)])



fprintf('\n\n\nkstests for traveling time\n')
[h, p]=kstest2(tvl0, tvl2);
fprintf(['\n nostim cueon ', num2str([h, p]), '\n'])

[h, p]=kstest2(tvl0, tvl1);
fprintf(['\n nostim cuesample ', num2str([h, p]), '\n'])



fprintf('\n\n\nkstests for sampling time\n')
[h, p]=kstest2(rxn0,rxn1);

fprintf(['\n nostim cueon ', num2str([h, p]), '\n'])

fprintf(['\n nostim cuesample ', num2str([h, p]), '\n'])
[h, p]=kstest2(rxn0,rxn2);

% 
% figure(2)
% suptitle(num2str(mouse))
% 435
% figure(2)
% subplot(331)
% qqplot(actualDelay, leftDelay)
% xlabel('actualDelay')
% ylabel('leftDelay')
% subplot(332)
% qqplot(actualDelay, rightDelay)
% xlabel('actualDelay')
% ylabel('rightDelay')
% subplot(334)
% fakeChoice=round(rand(length(a.validTrials), 1));
% randomDelay=sum([fakeChoice, 1-fakeChoice].*[leftDelay, rightDelay], 2);
% qqplot(randomDelay, leftDelay)
% xlabel('randomDelay')
% ylabel('leftDelay')
% subplot(335)
% qqplot(randomDelay, rightDelay)
% xlabel('randomDelay')

% ylabel('rightDelay')
% 
% subplot(333)
% qqplot(actualDelay, randomDelay)
% xlabel('actualDelay')
% ylabel('randomDelay')
% 
% subplot(336)
% hold on
% plotHist(randomDelay, 0.5, 'k', 'k', 1);
% ylim([0, 70])
% subplot(337)
% 
% plotHist(leftDelay, 0.5, 'g', 'g', 1);
% ylim([0, 70])
% 
% subplot(338)
% ylim([0, 70])
% 
% plotHist(rightDelay, 0.5, 'r', 'r', 1);
% ylim([0, 70])
% 
% subplot(339)
% ylim([0, 70])
% 
% plotHist(actualDelay, 0.5, 'b', 'b', 1);
%%
f3=figure(3);
set(f3, 'Position', [600, 600, 1000, 250])

subplot(131)
x1=xyzP(:, 1);
x2=xyzP(:, 2);
y=xyzP(:, 3);
X = [ones(size(x1)) x1 x2 x1.*x2];
% X = [ones(size(x1)) x1 x2 x1./(x1+x2)];
% X = [ones(size(x1)) x1 x2 x1./(x1+x2)  x2./(x1+x2)];
% X = [ones(size(x1)) x1 x2];
[b ,BINT,R,RINT,STATS]= regress(y,X);
b
STATS

scatter3(x1,x2,y,'filled')
zlim([0 1])
hold on
x1fit = min(x1):.01:max(x1);
x2fit = min(x2):.01:max(x2);
[X1FIT,X2FIT] = meshgrid(x1fit,x2fit);
YFIT = b(1) + b(2)*X1FIT + b(3)*X2FIT+ b(4)*X1FIT.*X2FIT;
% YFIT = b(1) + b(2)*X1FIT + b(3)*X2FIT + b(4)*X1FIT./(X1FIT+X2FIT);
% YFIT = b(1) + b(2)*X1FIT + b(3)*X2FIT + b(4)*X1FIT./(X1FIT+X2FIT)+ b(5)*X2FIT./(X1FIT+X2FIT);
% YFIT = b(1) + b(2)*X1FIT + b(3)*X2FIT;

colormap(april)

mesh(X1FIT,X2FIT,YFIT)
view(0,90)
xlabel('left')
ylabel('right')
zlabel('left preference')


subplot(132)
hist(R)
title('distribution of residuals')

subplot(133)
qqplot(R)

xxx=data(:, 1:2);
yyy=data(:, 3);
[bg,DEV,STATS] = glmfit(xxx, yyy, 'binomial', 'link', 'logit')
xx=linspace(0,10)';
xc=ones(length(xx), 1);
f4=figure(4)
set(f4, 'Position', [0, 0, 1200, 250])

for i=0:10
    figure(4)
    subplot(141)
    hold on

yfit = glmval(bg, [xx, xc*i], 'logit', 'size', 1);
plot(linspace(0,10)', yfit, '-')
    subplot(142)
    hold on

yfit = glmval(bg, [xc*i, xx], 'logit', 'size', 1);
plot(linspace(0,10)', yfit, 'r-')

end
    subplot(141)
    hold on
l=line([0 8], [0.5, 0.5]);
set(l, 'Color', [.8, .8, .8])
plot(leftSide(:, 1), leftSide(:, 2), '*')
ylim([0 1])
title('stepping through right reward delay')
xlabel('left reward delay/s')
ylabel('preference for left')
    subplot(142)
hold on
l=line([0 8], [0.5, 0.5]);
set(l, 'Color', [.8, .8, .8])
plot(rightSide(:, 1), 1-rightSide(:, 2), '*')
ylim([0 1])
xlabel('right reward delay/s')
ylabel('preference for left')
title('stepping through left reward delay')

    subplot(143)
x1fit = min(x1):.01:max(x1);
x2fit = min(x2):.01:max(x2);
[X1FIT,X2FIT] = meshgrid(x1fit,x2fit);
xpred = [X1FIT(:), X2FIT(:)];
ypred=glmval(bg, xpred, 'logit', 'size', 1);
Ypred = reshape(ypred,length(x2fit),length(x1fit));
zlim([0 1])
colormap(april)

mesh(x1fit,x2fit, Ypred)
view(0,90)
xlabel('left')
ylabel('right')
zlabel('left preference')

hold on
scatter3(x1,x2,y,'filled')

subplot(144)
%calculate 0.5 intercepts
leftDelayFixed=unique(leftDelay);
rightIndifferent=(0-bg(1)-bg(2)*leftDelayFixed)./bg(3);
plot(leftDelayFixed, rightIndifferent, '*')
hold on
[bf, bintf, rf, rintf, statsf]= regress(rightIndifferent, [ones(length(leftDelayFixed),1), leftDelayFixed]);
xf=min(leftDelayFixed):1:max(leftDelayFixed);
lf=plot(xf, bf(1)+bf(2).*xf);
set(lf, 'Color', 'r')
l1=line([min(leftDelayFixed) max(leftDelayFixed)], [0, 0]);
set(l1, 'Color', [.8, .8, .8])
l2=line( [0, 0], [min(leftDelayFixed) max(leftDelayFixed)]);
set(l2, 'Color', [.8, .8, .8])
xlabel('Fixed Left Delay')
ylabel('Indifferent Right Delay')



f=figure(5);
set(f, 'Position', [0, 0, 800, 700])
subplot(221)
[gof,intercept]=plotHyperThings(data, 1, 2);
xlabel('Left Delay/s');
ylabel('Preference for left side');

subplot(222)
hold on

[bf, bintf, ~, rintf, statsf]= regress(intercept', [ones(length(leftDelayFixed),1), leftDelayFixed]);
xf=min(leftDelayFixed):1:max(leftDelayFixed);
lf=plot(xf, bf(1)+bf(2).*xf, 'k');
xlim([0, max(leftDelayFixed)])
ylim([min(intercept)-1, max(intercept)+1])
plot(leftDelayFixed, intercept, 'ko')
plot(leftDelayFixed, intercept, 'k*')
xlabel('Right Delay/s');
ylabel('Indifferent Left Delay/s');


subplot(223)
data5=data;
data5(:, 3)=1-data(:, 3);
[gof,intercept]=plotHyperThings(data5, 2, 1);
xlabel('Right Delay/s');
ylabel('Preference for left side');


subplot(224)
hold on

[bf, bintf, rf, rintf, statsf]= regress(intercept', [ones(length(leftDelayFixed),1), leftDelayFixed]);
xf=min(leftDelayFixed):1:max(leftDelayFixed);
lf=plot(xf, bf(1)+bf(2).*xf, 'k');
xlim([0, max(leftDelayFixed)])
ylim([min(intercept)-1, max(intercept)+1])
plot(leftDelayFixed, intercept, 'ko')
plot(leftDelayFixed, intercept, 'k*')
xlabel('Left Delay/s');
ylabel('Indifferent small delay/s');

% subplot(223)
% %plot data by stimulation
% [bg,DEV,STATS, intercept]=plotLogitThings(data,3, 8, 11, 1);
% xlabel('Delay/s');
% ylabel('Preference for left side');
% 
% subplot(224)
% %plot data by stimulation
% [bg,DEV,STATS, intercept]=plotLogitThings(data,3,  8, 10, 1);
% xlabel('Delay/s');
% ylabel('Preference for left side');
% 
% 
% figure(6)
% 
% [coefficients, deviances, regressionStats] = glmfit(data(:, [8, 10, 11]), data(:, 3), 'binomial', 'link', 'logit');
% 
% [ax, lineHandles, patchHandles]=plotLogisticRegression(coefficients, regressionStats, data, [8, 10, 11], 8, [10, 11])


%%

%%
% 
% f=figure;
% set(f, 'Position', [300, 300, 200, 200])0
% 
% L=dataL./dataLs;
% R=dataR./dataRs;
% 
% hold on
% ciplot(mean(L, 2)+std(L, 0, 2), mean(L, 2)-std(L, 0, 2), leftDelaySet, [.9, .8, .95])
% % plot(leftDelaySet, mean(L, 2)+std(L, 0, 2), 'Color', [.6, .5, .85])
% % plot(leftDelaySet, mean(L, 2)-std(L, 0, 2), 'Color', [.6, .5, .85])
% 
% 
% ciplot(mean(R, 2)+std(R, 0, 2), mean(R, 2)-std(R, 0, 2), leftDelaySet, [.8, .9, .7])
% % plot(leftDelaySet, mean(R, 2)+std(R, 0, 2), 'Color', [.5, .7, .85])
% % plot(leftDelaySet, mean(R, 2)-std(R, 0, 2), 'Color', [.85, .7, .85])
% plot(leftDelaySet, mean(R, 2), '*','Color', [.7, .4, .8], 'LineWidth', 2)
% plot(leftDelaySet, me485an(R, 2), 'Color', [.7, .4, .8], 'LineWidth', 2)
% 
% plot(leftDelaySet, mean(L, 2), '*','Color', [.5, .3, .6], 'LineWidth', 2)
% plot(leftDelaySet, mean(L, 2), 'Color', [.5, .3, .6], 'LineWidth', 2)
% xlim([0 max(leftDelaySet)])
% 
% ylim([0 1])
% xlabel('Delay/s');    
% ylabel('Preference');
% 
% l=line([0 max(leftDelaySet)], [0.5, 0.5]);
% set(l, 'Color', 'r')